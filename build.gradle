// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = 'defaul'

    repositories {
        google()
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }

        /*For LCP Implementation on 12-01-2021************************vindhya**
        ivy {
            url 'https://liblcp.dita.digital'
            patternLayout { artifact '/[organisation]/[module]/android/aar/test/[revision].[ext]' }
            metadataSources { artifact() }
            }
        //
        /*End For LCP Implementation on 12-01-2021*****************/
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.30"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }

        /*Start - For Implementing LCP Module on 26-03-2021 - DEVELOPMENT*/
//        ivy {
//            url = uri("https://liblcp.dita.digital")
//            patternLayout { artifact ('/[organisation]/[module]/android/aar/test/[revision].[ext]')}
//            metadataSources{ artifact() }
//        }
        /*End - For Implementing LCP Module on 26-03-2021 - DEVELOPMENT*/
        /**********************PRODUCTION LICENSE*****************************/
        ivy {
            url = uri('https://liblcp.dita.digital')
            patternLayout {
                artifact ('/[organisation]/[module]/android/aar/f1RlfDb4d5cPrA/[revision].[ext]')
                metadataSources { artifact() }
            }

        }
        /**********************PRODUCTION LICENSE*****************************/
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
